package com.brotech;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.net.Socket;import java.util.concurrent.atomic.AtomicInteger;public class RpcClient {    private Socket socket;    private PrintWriter writer;    private BufferedReader reader;    private AtomicInteger idGenerator = new AtomicInteger(0);    //connect to server    public void connect(String address, int port) {        try {            socket = new Socket(address, port);            writer = new PrintWriter(socket.getOutputStream(), true);            reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));            System.out.printf("connected to server with following address %s and port %s", address, port);        } catch (IOException e) {            System.err.printf("socket creation error %s", e.getMessage());        }    }    public RpcMessage invokeSync(int methodCode, String payload) {        RpcMessage message = new RpcMessage(idGenerator.getAndIncrement(), payload, methodCode);        String request = message.toJson();        writer.println(request);        try {            String inputLine = reader.readLine();            return RpcMessage.fromJson(inputLine);        } catch (IOException e) {            throw new RuntimeException(e);        }    }    public RpcMessage echoMessage(String request) {        return invokeSync(RpcMethod.ECHO, request);    }    public void closeClient(){        try {            if (socket != null){                socket.close();            }        } catch (IOException e) {            throw new RuntimeException(e);        }    }}